{"version":3,"sources":["components/textInput/index.js","components/button/index.js","components/footer/index.js","components/header/index.js","pages/username/index.js","helper/validator.js","pages/password/index.js","pages/signup/index.js","App.js","serviceWorker.js","index.js"],"names":["TextInput","label","name","value","type","onChange","status","message","className","Button","onClick","Footer","Header","heading","UserNamePage","useState","userName","setUserName","error","setError","history","useHistory","e","target","console","log","push","PasswordPage","password","setPassword","SignUpPage","firstName","lastName","reUserName","rePassword","values","setValues","errors","setErrors","handleOnChange","errorValues","fields","Object","keys","length","constructor","signUpValidator","App","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.72a4096d.chunk.js","sourcesContent":["import React from 'react'\nimport './style.scss'\n\nconst TextInput =({label ,name, value, type, onChange, status, message})=>{\n    return(\n        <div className=\"inputContainer\">\n            <label className=\"label\">{label}</label>\n            <input\n                className=\"input\"\n                name={name}\n                value={value} \n                type={type}\n                onChange={onChange}/>\n            {status === true && <div className=\"errorContainer\">{message}</div>}\n        </div>\n    )\n}\n\nexport default TextInput","import React from 'react'\nimport './style.scss'\nconst Button =({name, onClick})=>{\n    return(\n        <div>\n            <button\n                className=\"button\"\n                onClick={onClick}>{name}</button>\n        </div>\n    )\n}\n\nexport default Button","import React from 'react'\nimport './style.scss'\nconst Footer =()=>{\n    return(\n        <div className=\"footerContainer\">\n            <p1>Your account for everything Autodesk</p1>\n            <p2>Learn more</p2>\n        </div>\n    )\n}\n\nexport default Footer","import React from 'react'\nimport './style.scss'\nconst Header =({heading})=>{\n    return(\n        <div className=\"headerContainer\">\n            <p>{heading}</p>\n        </div>\n    )\n}\n\nexport default Header","import React, {useState} from 'react'\nimport { useHistory } from \"react-router-dom\";\nimport TextInput from '../../components/textInput'\nimport Button from '../../components/button'\nimport Footer from '../../components/footer'\nimport Header from '../../components/header'\nimport {validator} from '../../helper/validator'\nconst UserNamePage = () =>{   \n    const [userName, setUserName] = useState('')\n    const [error, setError] = useState(false)\n\n    const history = useHistory();\n\n    const handleOnChange =(e)=>{\n        setUserName(e.target.value)\n    }\n    \n    const handleSubmit = ()=>{\n        console.log('submitted')\n        setError(validator(userName))\n    }\n\n    const redirectToSignUp=()=>{\n        history.push(\"/signup\");\n    }\n    return (\n        <div className=\"mainContainer\">\n            <Header heading=\"Sign in\"/>\n            <TextInput\n                name='Username'\n                type='text'\n                value={userName} \n                onChange={handleOnChange}\n                status={error}\n                message=\"Please enter username\"/>\n            <Button\n                name='NEXT'\n                onClick={handleSubmit}/>\n            <div className=\"tip\">\n                <p1>New to Autodesk? </p1>\n                <p2 onClick={redirectToSignUp}><strong>Create account</strong></p2>\n            </div>\n            <div className=\"footer\">\n                <Footer/>\n            </div>\n        </div>\n        \n    )\n}\n\nexport default UserNamePage","export const signUpValidator=(fields, errors)=>{\n    if (Object.keys(fields).length===0 && fields.constructor === Object){\n        errors.firstName = true\n        errors.lastName = true\n        errors.userName = true\n        errors.reUserName = true\n        errors.password = true\n        errors.rePassword = true\n        return errors\n    }\n    if (fields.firstName===''){\n        errors.firstName = true\n    }\n    else{\n        errors.firstName = false\n    }\n    if (fields.lastName===''){\n        errors.lastName = true\n    }\n    else{\n        errors.lastName = false\n    }\n    if (fields.userName===''){\n        errors.userName = true\n    }else{\n        errors.userName = false\n    }\n    if (fields.reUserName===''){\n        errors.reUserName = true\n    }else{\n        errors.reUserName = false\n    }\n    if (fields.password===''){\n        errors.password = true\n    }else{\n        errors.password = false\n    }\n    if (fields.rePassword===''){\n        errors.rePassword = true\n    }else{\n        errors.rePassword = false\n    }\n    return errors\n}\n\nexport const validator =(field)=>{\n    if (field===''){\n        return true\n    }else{\n        return false\n    }\n        \n}","import React, {useState} from 'react'\nimport TextInput from '../../components/textInput'\nimport Button from '../../components/button'\nimport Footer from '../../components/footer'\nconst PasswordPage = () =>{   \n    const [password, setPassword] = useState('')\n\n    const handleOnChange =(e)=>{\n        setPassword(e.target.value)\n    }\n    \n    const handleSubmit = ()=>{\n        console.log('submitted')\n    }\n    return (\n        <div className=\"mainContainer\">\n            <div className=\"welcomeContainer\">\n                <p1>Welcome</p1>\n                <p2>userName</p2>\n            </div>\n            <TextInput\n                name='Password'\n                type='password'\n                value={password} \n                onChange={handleOnChange}/>\n            <Button\n                name='Sign in'\n                onClick={handleSubmit}/>\n            <div className=\"footer\">\n                <Footer/>\n            </div>\n        </div>\n        \n    )\n}\n\nexport default PasswordPage","import React, {useState} from 'react'\nimport { useHistory } from \"react-router-dom\";\nimport TextInput from '../../components/textInput'\nimport Button from '../../components/button'\nimport Footer from '../../components/footer'\nimport Header from '../../components/header'\nimport {signUpValidator} from '../../helper/validator'\nconst SignUpPage = () =>{   \n    const [values, setValues] = useState({\n        firstName : '',\n        lastName : '',\n        userName : '',\n        reUserName : '',\n        password : '',\n        rePassword : '',\n\n    })\n    const [errors, setErrors] = useState({\n        firstName : false,\n        lastName : false,\n        userName : false,\n        reUserName : false,\n        password : false,\n        rePassword : false,\n    })\n    const history = useHistory();\n\n    const handleOnChange =(e)=>{\n        setValues({...values, [e.target.name] : e.target.value})\n    }\n    \n    const handleSubmit = ()=>{\n        console.log('submitted')\n        const errorValues=signUpValidator(values, errors)\n        setErrors({...errors,\n            errors : errorValues})\n    }\n\n    const redirectToSignIn=()=>{\n        history.push(\"/\");\n    }\n    return (\n        <div className=\"mainContainer\">\n            <Header heading='Create account'/>\n            <div className=\"nameContainer\">\n                <div className=\"fName\">\n                    <TextInput\n                        name='firstName'\n                        label='First name'\n                        type='text'\n                        status={errors.firstName || false}\n                        value={values.firstName || ''} \n                        onChange={handleOnChange}\n                        message='Please enter first name'\n                        />\n                </div>\n                <div className=\"lName\">\n                    <TextInput\n                        name='lastName'\n                        label='Last name'\n                        type='text'\n                        status={errors.lastName || false}\n                        value={values.lastName || ''} \n                        onChange={handleOnChange}\n                        message='Please enter last name'/>\n                </div>\n            </div>\n            <TextInput\n                name='userName'\n                label='Username'\n                type='text'\n                status={errors.userName || false}\n                value={values.userName || ''} \n                onChange={handleOnChange}\n                message='Please enter username'/>\n            <TextInput\n                label='Re-type username'\n                name='reUserName'\n                type='text'\n                status={errors.reUserName || false}\n                value={values.reUserName || ''} \n                onChange={handleOnChange}\n                message='Please re-enter first name'/>\n            <TextInput\n                label='Password'\n                name='password'\n                type='password'\n                status={errors.password || false}\n                value={values.password || ''} \n                onChange={handleOnChange}\n                message='Please enter first name'/>\n            <TextInput\n                label='Re-type password'\n                name='rePassword'\n                type='text'\n                status={errors.reUserName || false}\n                value={values.rePassword || ''} \n                onChange={handleOnChange}\n                message='Please re-enter first name'/>\n            <Button\n                name='NEXT'\n                onClick={handleSubmit}/>\n            <div className=\"tip\">\n                <p1>Already have an account? </p1> \n                <p2 onClick={redirectToSignIn}><strong>Sign in</strong></p2>\n            </div>\n            <div className=\"footer\">\n                <Footer/>\n            </div>\n        </div>\n        \n    )\n}\n\nexport default SignUpPage","import React from 'react';\nimport {\n  Switch,\n  Route,\n} from \"react-router-dom\";\nimport './App.scss';\nimport UserNamePage from './pages/username'\nimport PasswordPage from './pages/password'\nimport SignUpPage from './pages/signup' \nfunction App() {\n  return (\n    <div className=\"App\">\n        <Switch>\n          <Route exact path=\"/\" component={UserNamePage}></Route>\n          <Route path=\"/password\" component={PasswordPage}></Route>\n          <Route path=\"/signup\" component={SignUpPage}></Route>\n        </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {BrowserRouter as Router} from \"react-router-dom\";\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <App/>\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}